Image
------

An image includes everything an application needs to be run.

* A cut down OS
* Third party libraries
* Application files
* Env variables


Container
----------

A container is like a virtual machine which:

* Provides an isolated env 
* Can be stopped & restarted
* its just a process!

A container gets its file system from the image


Dockerfile
-----------

A Dockerfile contains instructions for building an image.

FROM - for specifying the base image
WORKDIR - for specifying the working directory 
COPY - for copying files and directories
ADD - for adding files and directories, Addition feature: if a compressed file is passed it will be unzipped, can pass web links for files
RUN - for executing operating system commands
ENV - for setting env variables
EXPOSE - for telling docker that our container is starting on a given port
USER - for specifying the user that should run the application
CMD, ENTRYPOINT - for specifying command that should be executed, when we start the container

CMD
----
* Shell form
* /bin/sh
* cmd
CMD npm start

* Exec form
CMD ["npm","start"]

RUN vs CMD
-----------
Run is build time instruction, use RUN while building the app
CMD is run time instruction, use CMD after the app is built


Build Optimization
-------------------

To optimize build process add Stable instructions first, then add Changing instructions.


Removing images and containers
-------------------------------

docker image prune : to remove all dangling images

docker container prune : to remove all stopped containers


