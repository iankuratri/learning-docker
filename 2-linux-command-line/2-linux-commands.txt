# Linux commands
-----------------


## Managing Packages
---------------------

apt : package manager for linux
apt update : update package database
apt list : list all the packages
apt install nano : install a package
apt remove nano : uninstall a package


## Navigating the File System
------------------------------

pwd : print working directory

ls : shows list of files and folders (horizontally)
li -1 : shows list of files and folders (vertically)
ls -l : shows long list with permissions, size, date etc
ls -a : also shows hidden files
ls [path] : to view list of files and folders of a specified directory 

cd : change current directory
cd / : absolute path from root directory
cd dev/ : relative path from current directory
cd ~ : to go to home directory


## Manipulating Files and Directories
--------------------------------------

mkdir -> make directory
mkdir test : create a folder named test

mv : move or rename
mv test docker : rename test folder to docker

touch : create a new files
touch hello.txt : create a file name hello.txt 

mv hello.txt world.txt : rename hello.txt to world.txt
mv hello.txt /etc : move hello.txt to /etc directory

rm : remove file
rm hello.txt : remove hello.txt file
rm -r test : remove test directory


## Editing and Viewing Files
-----------------------------

nano : basic text editor for linux
nano hello.txt : to edit hello.txt

cat : basic text viewer for linux
cat hello.txt : to view the content of hello.txt file

less : to view the content of file in an interactive way 
head -n 5 : to view first 5 lines of file
tail -n 5 : to view last 5 lines of file


## Redirection
---------------

cat file1.txt > file2.txt : read content of file1.txt and write to file2.txt
cat file1.txt file2.txt > combined.txt : read content of file1.txt file2.txt and write to combined.txt

echo hello world > message.txt : write echo output to message.txt file

ls -l /etc/ > fileInfo.txt : write list of files and folders in /etc/ to fileInfo.txt

>> append operator, appends text to the end of file


## Searching for Text
----------------------

grep : grep command can search for a string in groups of files
grep -i hello file1.txt : to search hello text in file1.txt, -i means case insensitive 
grep -i hello file1.txt file2.txt : to search in multiple files
grep -i hello file* :  to search using a pattern/wildcard
grep -i -r hello /etc/ : to search in a directory


## Finding Files and Directories
---------------------------------

find : for finding files and directories
find /etc/ : find files and directories in a directory
find -type d : find directories in a directory
find -type f : find files in a directory
find -type f -name "f*" : find all the files whose name starts with f
find -type f -iname "f*" : find all the files whose name starts with f, case insensitive
find / -type f -name "*.py" : find all the .py files in root directory
find / -type f -name "*.py" > pythonFiles.txt : find all the .py files in root directory and write to pythonFiles.txt


## Chaining commands
---------------------

make a directory named test, go inside test directory and print done

mkdir test ; cd test ; echo done : all commands get executed, even if any command fails
mkdir test && cd test && echo done : and operator, commands gets executed before any command fails 

mkdir test || echo "directory exists" : or operator, if first command fails then only second gets executed
ls /bin | less : pipe operator, output of ls /bin command goes to less command

multiple line commands (press enter/return after every \)

mkdir test;\ 
cd test;\ 
echo done 


## Environment Variables
-------------------------

printenv : prints all the env variables in linux
printenv PATH : print the value of PATH env variable
echo $PATH : print the value of PATH env variable

export DB_USER=ankur : sets env variable in current terminal session

add permanent env variable in linux

cd ~
ls -a

nano .bashrc 
type `DB_USER=ankur` line to the end of file manually

or 

echo DB_USER=ankur >> .bashrc : appends `DB_USER=ankur` line to the end of file

source .bashrc : reloads the bashrc file to reflect changes of newly added env variable


## Managing Processes
----------------------

A Process is an instance of a running program. 

OR

Process means any program is in execution.

Thread means a segment of a process.

ps : lists all the running processes in linux

sleep 3 : prompt sleeps for 3 seconds and then wakes up

kill [PID] : kills process with matching PID - Process ID

kill 38 : kills process with PID = 38


## Managing Users
------------------

useradd : for adding a user
adduser : more interactive than useradd command, but uses it under the hood
usermod : for modifying a user
userdel : for deleting a user

useradd -m john : add a new user named john

adduser ankur : adds a new user, create a group with same name and adds the user to that group, 
also asks for password, full name, room number, work phone etc

cat /etc/passwd : to view user list
john:x:1000:1000::/home/john:/bin/sh : output from above command

usermod -s /bin/bash john : to change old shell (sh) to new shell (bash) of user john

cat /etc/shadow : to view user password (stored in encrypted format)

userdel john : to delete user


How to login to docker container as john?

docker ps
docker exec -it 37f bash : login as root user, [37f] is the docker container ID here
exit 

docker exec -it -u john 37f bash : login as john

## Managing Groups
-------------------

groupadd : for adding a group
groupmod : for modifying a group
groupdel : for deleting a group

groupadd developers : adds a group name developers

cat /etc/group : to view group list

usermod -G developers john : adding john to developers group

grep john etc/passwd : to find john in etc/passwd file

groups john : to view the groups of user john




